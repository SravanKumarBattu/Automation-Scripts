//gets registered date then adds no.of days to send an automated mail
//Time based triggers will take the task of automating the mail

function printEntireData() {
// This represents ALL the data
var ss = SpreadsheetApp.getActiveSpreadsheet();
var sheet = ss.getSheets()[0];
var range = sheet.getDataRange();
var values = range.getValues(); 
var n=ss.getLastRow();
var current_date= new Date();

//number of days to set reminder function call it as "date.addDays(no.of days)"

Date.prototype.addDays = function(days) {
    var date = new Date(this.valueOf());
    date.setDate(date.getDate() + days);
    return date;
}


//implementing the add date(X) logic with the timestamp
 
 for (var i = 1; i < values.length; i++) {
   var j=0; 
  var registered_date=new Date(values[i][j]);
 
  var reminding_date=registered_date.addDays(values[i][1]);
   
  
//now check with the current_time and reminding_time to check for updates
if(reminding_date.getFullYear()==current_date.getFullYear()) //checking year
  {
    if(reminding_date.getMonth()==current_date.getMonth() && reminding_date.getDate()==current_date.getDate())//checking month and date
    { 
      var ss = SpreadsheetApp.getActiveSheet();
      var subject = ss.getRange(i,5).getValue();
      var message = ss.getRange(i,6).getValue();
      var emailAddress = ss.getRange(i+1,4).getValue();
      MailApp.sendEmail(emailAddress, subject, message);
      Logger.log("SUCCESSFULLY SEND MAIL on"+ reminding_date+ " "+ current_date +"to " + values[i+1][3]);
    }
    else
  {
   
    Logger.log("Not the correct time Reminding Date :" + reminding_date.getDate() + ' Current Date :'+ current_date.getDate());
  }
  }
}
}
 
